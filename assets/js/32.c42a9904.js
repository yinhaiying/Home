(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{283:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"单元测试之断言（chai-js）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单元测试之断言（chai-js）"}},[t._v("#")]),t._v(" 单元测试之断言（chai.js）")]),t._v(" "),s("blockquote",[s("p",[t._v("作为前端开发，很少去自己写单元测试。对于单元测试的了解也很少，自学了一点关于单元测试断言的知识，有了一些自己的个人理解，记录下来，方便下次使用时查阅。")])]),t._v(" "),s("h3",{attrs:{id:"什么是断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是断言"}},[t._v("#")]),t._v(" 什么是断言")]),t._v(" "),s("p",[t._v("当你对类，模块或者方法的可以接受的输入和输出有着很明确的定义和认识，当程序的输出结果和输入不匹配时，\n你想让程序有一个明确的返回。比如：我明确地知道"),s("code",[t._v("1+1=2")]),t._v(",我现在就想知道我输入"),s("code",[t._v("1+1")]),t._v("会不会得到2。如果不是程序返回一个错误。这时候我们通常会使用到"),s("strong",[t._v("断言")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("断言")]),t._v("就是专门用来验证输出和期望是否一致的一个工具。在内容的实现上，它是通过比较一个实际值"),s("code",[t._v("actual")]),t._v("和一个期望值"),s("code",[t._v("expected")]),t._v("来实现的。下面介绍一个使用较为广泛的断言库"),s("code",[t._v("chai.js")])]),t._v(" "),s("h3",{attrs:{id:"chai-js断言库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chai-js断言库"}},[t._v("#")]),t._v(" chai.js断言库")]),t._v(" "),s("ol",[s("li",[t._v("安装和导入")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("npm i chai\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" chai "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chai'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" expect "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chai"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("使用")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("chai的使用是类似于链式调用的形式。以"),s("code",[t._v("expect(foo).to.be.a('string');")]),t._v("为例，\n通过"),s("code",[t._v(".")]),t._v("我么你可以把这个链式分为几个部分：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("expect(foo)")])]),t._v(" "),s("li",[s("code",[t._v("to")])]),t._v(" "),s("li",[s("code",[t._v("be")])]),t._v(" "),s("li",[s("code",[t._v("a('string')")]),t._v("\n我们逐步来理解这几个部分：\n"),s("code",[t._v("expect(foo)")]),t._v("：是你要断言的对象，翻译过来就是"),s("strong",[t._v("我希望某某某")]),t._v(" "),s("code",[t._v("to")]),t._v("：虚词，单纯作为语言链提供以期提高断言的可读性，它本身并不具有断言功能。\n"),s("code",[t._v("be")]),t._v(":同"),s("code",[t._v("to")]),t._v("一样，是语言链调用提高可读性。\n"),s("code",[t._v("a(string)")]),t._v("："),s("code",[t._v("a(type)")]),t._v("是一个断言，用来判断测试纸的类型。type是被测试值的类型，也就是断言的期望值。")])]),t._v(" "),s("p",[t._v("那么根据上面的分析，我们可以知道实现一个断言需要这几个部分：")]),t._v(" "),s("ol",[s("li",[t._v("要断言的对象")]),t._v(" "),s("li",[t._v("不具备断言功能的断言词")]),t._v(" "),s("li",[t._v("具备断言功能的断言词")]),t._v(" "),s("li",[t._v("以及期望结果\n要断言的对象和期望结果都是需要根据实际输入和输出进行设置的。因此我们主要是讲解断言词。")])]),t._v(" "),s("h4",{attrs:{id:"不具备断言功能的断言词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不具备断言功能的断言词"}},[t._v("#")]),t._v(" 不具备断言功能的断言词")]),t._v(" "),s("ul",[s("li",[t._v("to")]),t._v(" "),s("li",[t._v("be")]),t._v(" "),s("li",[t._v("been")]),t._v(" "),s("li",[t._v("is")]),t._v(" "),s("li",[t._v("that")]),t._v(" "),s("li",[t._v("which")]),t._v(" "),s("li",[t._v("and")]),t._v(" "),s("li",[t._v("has")]),t._v(" "),s("li",[t._v("have")]),t._v(" "),s("li",[t._v("with")]),t._v(" "),s("li",[t._v("at")]),t._v(" "),s("li",[t._v("of")]),t._v(" "),s("li",[t._v("same")]),t._v(" "),s("li",[t._v("but")]),t._v(" "),s("li",[t._v("does")]),t._v(" "),s("li",[t._v("still\n这些断言词其实没有意义，你把它去掉也不受到影响。比如：")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面两个断言能够实现相同的功能。也就是说这些词语使不使用没什么影响。\n接下来说一下具备断言功能的断言词。")]),t._v(" "),s("h4",{attrs:{id:"具备断言功能的断言词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具备断言功能的断言词"}},[t._v("#")]),t._v(" 具备断言功能的断言词")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("equal")]),t._v(" "),s("code",[t._v("equal")]),t._v("是一个基本上万能的断言词，绝大多数的断言都可以转换成使用"),s("code",[t._v("equal")]),t._v("来实现。")])]),t._v(" "),s("p",[s("strong",[t._v("比如判断变量长度是否为3，我们可以使用"),s("code",[t._v("lengthOf")]),t._v(",同样可以使用"),s("code",[t._v("equal")]),t._v("实现")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("have"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lengthOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n")])])]),s("p",[s("strong",[t._v("比如判断数据类型：我们既可以使用"),s("code",[t._v("a")]),t._v("，同样可以使用"),s("code",[t._v("equal")]),t._v("实现")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("be"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v(".deep")]),t._v(" "),s("code",[t._v("deep")]),t._v("主要是用来递归比较对象的键值对，而不是比较对象本身。通常配合"),s("code",[t._v("equal")]),t._v("和"),s("code",[t._v("property")]),t._v("进行使用。\n比如：")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 断言不通过")]),t._v("\n")])])]),s("p",[t._v("上面的断言无法通过，因为引用类型的比较的是对象。接下来我们看使用"),s("code",[t._v("deep")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 断言通过")]),t._v("\n")])])]),s("p",[t._v("也就是说如果是数组，对象等引用类型时，要比较里面的值需要使用"),s("code",[t._v("deep")]),t._v("。")]),t._v(" "),s("p",[t._v("通过使用"),s("code",[t._v("equal")]),t._v("和"),s("code",[t._v("deep")]),t._v("我们基本上能够实现绝大多数的断言。更多的关于断言\n可以参考"),s("a",{attrs:{href:"https://www.chaijs.com/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),s("p",[t._v("目前只是介绍了"),s("code",[t._v("expect")]),t._v("的使用，其实"),s("code",[t._v("chai.js")]),t._v("还有"),s("code",[t._v("assert")]),t._v("和"),s("code",[t._v("should")]),t._v("两种断言方式。\n其中"),s("code",[t._v("expect")]),t._v("主要适用于行为驱动测试(Behavior Driven Development.BDD)。其他两种断言方式，以后用到了再进行介绍。")])])}),[],!1,null,null,null);a.default=e.exports}}]);